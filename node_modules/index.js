const express = require("express");
const app = express();
const posts = require("./data/posts");
// const comments = require("./data/comments");
// const users = require("./data/users");
// const todos = require("./data/todos");

app.use(express.json()); // To handle JSON requests

// GET all posts
app.get("/posts", (req, res) => {
  res.json(posts);
});

// POST a new post
app.post("/posts", (req, res) => {
  const newPost = { id: posts.length + 1, ...req.body };
  posts.push(newPost);
  res.status(201).json(newPost);
});

// PUT (Update) a post by ID
app.put("/posts/:id", (req, res) => {
  const postId = parseInt(req.params.id);
  const index = posts.findIndex(p => p.id === postId);
  if (index !== -1) {
    posts[index] = { ...posts[index], ...req.body };
    res.json(posts[index]);
  } else {
    res.status(404).json({ message: "Post not found" });
  }
});

// DELETE a post by ID
app.delete("/posts/:id", (req, res) => {
  const postId = parseInt(req.params.id);
  const index = posts.findIndex(p => p.id === postId);
  if (index !== -1) {
    posts.splice(index, 1);
    res.status(204).send();
  } else {
    res.status(404).json({ message: "Post not found" });
  }
});

// Similar routes for /comments, /users, /todos

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
